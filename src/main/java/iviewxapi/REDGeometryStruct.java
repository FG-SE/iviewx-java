package iviewxapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * @struct REDGeometryStruct<br>
 * <br>
 * @brief Use this struct to customize the RED geometry.<br>
 * See chapter @ref redgeometry in the iView X SDK Manual for details.<br>
 * For setting up the RED geometry parameters with<br>
 * @ref REDGeometryStruct use function @ref iV_SetREDGeometry.<br>
 * <i>native declaration : C:\Program Files\SMI\iView X SDK\include\iViewXAPI.h:761</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class REDGeometryStruct extends Structure {
	/**
	 * @see REDGeometryEnum<br>
	 * C type : REDGeometryEnum
	 */
	public int redGeometry;
	public int monitorSize;
	/** C type : char[256] */
	public byte[] setupName = new byte[256];
	public int stimX;
	public int stimY;
	public int stimHeightOverFloor;
	public int redHeightOverFloor;
	public int redStimDist;
	public int redInclAngle;
	public int redStimDistHeight;
	public int redStimDistDepth;
	public REDGeometryStruct() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("redGeometry", "monitorSize", "setupName", "stimX", "stimY", "stimHeightOverFloor", "redHeightOverFloor", "redStimDist", "redInclAngle", "redStimDistHeight", "redStimDistDepth");
	}
	public REDGeometryStruct(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends REDGeometryStruct implements Structure.ByReference {
		
	};
	public static class ByValue extends REDGeometryStruct implements Structure.ByValue {
		
	};
}
