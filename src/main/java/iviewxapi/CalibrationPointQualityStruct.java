package iviewxapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * @struct CalibrationPointQualityStruct<br>
 * <br>
 * @brief This struct provides information about the fixation quality when a<br>
 * calibration point was shown. If the request calibration quality<br>
 * data is not available, the number and positionX/positionY will be<br>
 * set to -1. User have to check these fields to make sure the<br>
 * returned data is valid.<br>
 * <br>
 * Use @ref iV_GetCalibrationQuality to retrieve the calibration quality data<br>
 * <i>native declaration : C:\Program Files\SMI\iView X SDK\include\iViewXAPI.h:425</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CalibrationPointQualityStruct extends Structure {
	public int number;
	public int positionX;
	public int positionY;
	public double correctedPorX;
	public double correctedPorY;
	public double standardDeviationX;
	public double standardDeviationY;
	/**
	 * @see CalibrationPointUsageStatusEnum<br>
	 * C type : CalibrationPointUsageStatusEnum
	 */
	public int usageStatus;
	public double qualityIndex;
	public CalibrationPointQualityStruct() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("number", "positionX", "positionY", "correctedPorX", "correctedPorY", "standardDeviationX", "standardDeviationY", "usageStatus", "qualityIndex");
	}
	/**
	 * @param usageStatus @see CalibrationPointUsageStatusEnum<br>
	 * C type : CalibrationPointUsageStatusEnum
	 */
	public CalibrationPointQualityStruct(int number, int positionX, int positionY, double correctedPorX, double correctedPorY, double standardDeviationX, double standardDeviationY, int usageStatus, double qualityIndex) {
		super();
		this.number = number;
		this.positionX = positionX;
		this.positionY = positionY;
		this.correctedPorX = correctedPorX;
		this.correctedPorY = correctedPorY;
		this.standardDeviationX = standardDeviationX;
		this.standardDeviationY = standardDeviationY;
		this.usageStatus = usageStatus;
		this.qualityIndex = qualityIndex;
	}
	public CalibrationPointQualityStruct(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends CalibrationPointQualityStruct implements Structure.ByReference {
		
	};
	public static class ByValue extends CalibrationPointQualityStruct implements Structure.ByValue {
		
	};
}
