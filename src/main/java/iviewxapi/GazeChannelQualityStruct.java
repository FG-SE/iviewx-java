package iviewxapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * @struct GazeChannelQualityStruct<br>
 * <br>
 * @brief This struct provides information about the last validation.<br>
 * Therefore a valid validation must be successfully completed before the<br>
 * GazeChannelQualityStruct can be updated. To update information in @ref<br>
 * GazeChannelQualityStruct use function @ref iV_GetGazeChannelQuality.<br>
 * <i>native declaration : C:\Program Files\SMI\iView X SDK\include\iViewXAPI.h:692</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class GazeChannelQualityStruct extends Structure {
	public double gazeChannelQualityLeft;
	public double gazeChannelQualityRight;
	public double gazeChannelQualityBinocular;
	public GazeChannelQualityStruct() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("gazeChannelQualityLeft", "gazeChannelQualityRight", "gazeChannelQualityBinocular");
	}
	public GazeChannelQualityStruct(double gazeChannelQualityLeft, double gazeChannelQualityRight, double gazeChannelQualityBinocular) {
		super();
		this.gazeChannelQualityLeft = gazeChannelQualityLeft;
		this.gazeChannelQualityRight = gazeChannelQualityRight;
		this.gazeChannelQualityBinocular = gazeChannelQualityBinocular;
	}
	public GazeChannelQualityStruct(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends GazeChannelQualityStruct implements Structure.ByReference {
		
	};
	public static class ByValue extends GazeChannelQualityStruct implements Structure.ByValue {
		
	};
}
