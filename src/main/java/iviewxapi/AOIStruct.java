package iviewxapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * @struct AOIStruct<br>
 * <br>
 * @brief Use this struct to customize trigger AOIs. To define AOIs on screen, trigger<br>
 * parameter and trigger values use @ref iV_DefineAOIPort and @ref iV_DefineAOI functions.<br>
 * <i>native declaration : C:\Program Files\SMI\iView X SDK\include\iViewXAPI.h:880</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AOIStruct extends Structure {
	public int enabled;
	/** C type : char[256] */
	public byte[] aoiName = new byte[256];
	/** C type : char[256] */
	public byte[] aoiGroup = new byte[256];
	/** C type : AOIRectangleStruct */
	public AOIRectangleStruct position;
	public int fixationHit;
	public int outputValue;
	/** C type : char[256] */
	public byte[] outputMessage = new byte[256];
	public byte eye;
	public AOIStruct() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("enabled", "aoiName", "aoiGroup", "position", "fixationHit", "outputValue", "outputMessage", "eye");
	}
	/**
	 * @param aoiName C type : char[256]<br>
	 * @param aoiGroup C type : char[256]<br>
	 * @param position C type : AOIRectangleStruct<br>
	 * @param outputMessage C type : char[256]
	 */
	public AOIStruct(int enabled, byte aoiName[], byte aoiGroup[], AOIRectangleStruct position, int fixationHit, int outputValue, byte outputMessage[], byte eye) {
		super();
		this.enabled = enabled;
		if ((aoiName.length != this.aoiName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.aoiName = aoiName;
		if ((aoiGroup.length != this.aoiGroup.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.aoiGroup = aoiGroup;
		this.position = position;
		this.fixationHit = fixationHit;
		this.outputValue = outputValue;
		if ((outputMessage.length != this.outputMessage.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.outputMessage = outputMessage;
		this.eye = eye;
	}
	public AOIStruct(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends AOIStruct implements Structure.ByReference {
		
	};
	public static class ByValue extends AOIStruct implements Structure.ByValue {
		
	};
}
