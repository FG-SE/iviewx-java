package iviewxapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * @struct EventStruct<br>
 * <br>
 * @brief This struct provides information about the last eye event that has<br>
 * been calculated.<br>
 * To update information in @ref EventStruct use function @ref iV_GetEvent or set<br>
 * the event callback with with @ref iV_SetEventCallback.<br>
 * <i>native declaration : C:\Program Files\SMI\iView X SDK\include\iViewXAPI.h:543</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class EventStruct extends Structure {
	public byte eventType;
	public byte eye;
	public long startTime;
	public long endTime;
	public long duration;
	public double positionX;
	public double positionY;
	public EventStruct() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("eventType", "eye", "startTime", "endTime", "duration", "positionX", "positionY");
	}
	public EventStruct(byte eventType, byte eye, long startTime, long endTime, long duration, double positionX, double positionY) {
		super();
		this.eventType = eventType;
		this.eye = eye;
		this.startTime = startTime;
		this.endTime = endTime;
		this.duration = duration;
		this.positionX = positionX;
		this.positionY = positionY;
	}
	public EventStruct(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends EventStruct implements Structure.ByReference {
		
	};
	public static class ByValue extends EventStruct implements Structure.ByValue {
		
	};
}
