package iviewxapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * @struct EventStruct32<br>
 * <br>
 * @brief This struct provides information about the last eye event that has<br>
 * been calculated.<br>
 * The difference to @ref EventStruct is that the timestamp will be stored in<br>
 * milliseconds instead of microseconds and the order of the components are different.<br>
 * To update information in @ref EventStruct32 use function @ref iV_GetEvent32.<br>
 * <i>native declaration : C:\Program Files\SMI\iView X SDK\include\iViewXAPI.h:576</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class EventStruct32 extends Structure {
	public double startTime;
	public double endTime;
	public double duration;
	public double positionX;
	public double positionY;
	public byte eventType;
	public byte eye;
	public EventStruct32() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("startTime", "endTime", "duration", "positionX", "positionY", "eventType", "eye");
	}
	public EventStruct32(double startTime, double endTime, double duration, double positionX, double positionY, byte eventType, byte eye) {
		super();
		this.startTime = startTime;
		this.endTime = endTime;
		this.duration = duration;
		this.positionX = positionX;
		this.positionY = positionY;
		this.eventType = eventType;
		this.eye = eye;
	}
	public EventStruct32(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends EventStruct32 implements Structure.ByReference {
		
	};
	public static class ByValue extends EventStruct32 implements Structure.ByValue {
		
	};
}
