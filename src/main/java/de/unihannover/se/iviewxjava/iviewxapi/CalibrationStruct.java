package de.unihannover.se.iviewxjava.iviewxapi;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * @struct CalibrationStruct
<br>
 * <br>
 * @brief Use this struct to customize the calibration and validation behavior.
<br>
 * To set calibration parameters with @ref CalibrationStruct use function
<br>
 * @ref iV_SetupCalibration before a calibration or validation is started.<br>
 * <i>native declaration : C:\Program Files\SMI\iView X SDK\include\iViewXAPI.h:717</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CalibrationStruct extends Structure {
	public int method;
	public int visualization;
	public int displayDevice;
	public int speed;
	public int autoAccept;
	public int foregroundBrightness;
	public int backgroundBrightness;
	public int targetShape;
	public int targetSize;
	/** C type : char[256] */
	public byte[] targetFilename = new byte[256];
	public CalibrationStruct() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("method", "visualization", "displayDevice", "speed", "autoAccept", "foregroundBrightness", "backgroundBrightness", "targetShape", "targetSize", "targetFilename");
	}
	public CalibrationStruct(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends CalibrationStruct implements Structure.ByReference {
		
	};
	public static class ByValue extends CalibrationStruct implements Structure.ByValue {
		
	};
}
